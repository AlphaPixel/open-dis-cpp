#!/bin/bash
#
# Unix bash shell script to apply post-processing patches to the generated source
# code. This should be run only after source code has been newly generated by the
# XMPP utility. This should be done automatically on Unix-derived operating systems
# via the ant task. You're on your own for windows.
#
# Since this is run from the project directory (one level above this), all the
# file names used should be relative to that directory.
#
# Uses the Unix patch utility.
#
# Arguments: $0 = shell script name (this file)
# $1 = product: dis, dismobile, etc. 
#
# To generate a patch file, check out the current source code from svn, then
# modify it. Run the command
# svn diff SomeFile.java > SomeFile.java.patch
# to create the patch file
#
# @author DMcG
# @version $Id:$

echo Arguments: $0, $1, $2

case "$1" in

   cpp)
      # Apply patch to VariableDatum
      patch cpp/DIS/VariableDatum.cpp patches/cpp/VariableDatum.cpp.patch
      patch cpp/DIS/VariableDatum.h patches/cpp/VariableDatum.h.patch
      patch cpp/DIS/Pdu.cpp patches/cpp/Pdu.patch
      ;;

  cppDis7)
      # Apply patch to VariableDatum
      patch cpp/DIS7/VariableDatum.cpp patches/cppDis7/VariableDatum.cpp.patch
      ;;


 
   *)
     echo product not found. You should set the "product" ant property in the build.xml file.
     exit
     ;;
 esac     
